
Arrays , Lists, Dictionaries, enums




OOP
Classes

Abstraction {Parameters, Arguments, return, abstract classes}
Encapsulation {namespace, public, private, protected, internal, Getter, Setter}
Inheritance 
Polymorphism (Interfaces)

SOLID

Single Responsibility Principle
Open Closed Principle {open for extension closed for modification}
Liskov Substitution Principle
Interface Segregation Principle
Depandancy Inversion Principle

Don't Repeat Yourself (DRY)


factory method pattern


Design Patterns:
object pooling?

observer pattern (events)
inheritance vs composition in unity



Mechanics:
Path following
Targeting (calculate future position)


Class diagrams

Debuging (breakpoints vs Debug log)

Gitflow